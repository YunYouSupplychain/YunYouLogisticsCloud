<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunyou.modules.tms.order.mapper.TmRepairOrderOutboundInfoMapper">
    
	<sql id="tmRepairOrderOutboundInfoColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.repair_no AS "repairNo",
		a.line_no AS "lineNo",
		a.fitting_code AS "fittingCode",
		a.barcode AS "barcode",
		a.operate_time AS "operateTime",
		a.operator AS "operator",
		a.supplier_code AS "supplierCode",
		a.price AS "price",
		a.org_id AS "orgId",
		a.rec_ver AS "recVer",
		a.base_org_id AS "baseOrgId"
	</sql>
	
	<sql id="tmRepairOrderOutboundInfoJoins">
		
	</sql>

	<select id="get" resultType="com.yunyou.modules.tms.order.entity.TmRepairOrderOutboundInfo" >
		SELECT 
			<include refid="tmRepairOrderOutboundInfoColumns"/>
		FROM tm_repair_order_outbound_info a
		<include refid="tmRepairOrderOutboundInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.yunyou.modules.tms.order.entity.TmRepairOrderOutboundInfo" >
		SELECT 
			<include refid="tmRepairOrderOutboundInfoColumns"/>
		FROM tm_repair_order_outbound_info a
		<include refid="tmRepairOrderOutboundInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="repairNo != null and repairNo != ''">
				AND a.repair_no = #{repairNo}
			</if>
			<if test="lineNo != null and lineNo != ''">
				AND a.line_no = #{lineNo}
			</if>
			<if test="fittingCode != null and fittingCode != ''">
				AND a.fitting_code = #{fittingCode}
			</if>
			<if test="barcode != null and barcode != ''">
				AND a.barcode = #{barcode}
			</if>
			<if test="operator != null and operator != ''">
				AND a.operator = #{operator}
			</if>
			<if test="supplierCode != null and supplierCode != ''">
				AND a.supplier_code = #{supplierCode}
			</if>
			<if test="orgId != null and orgId != ''">
				AND a.org_id = #{orgId}
			</if>
            <if test="baseOrgId != null and baseOrgId != ''">
                AND a.base_org_id = #{baseOrgId}
            </if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.yunyou.modules.tms.order.entity.TmRepairOrderOutboundInfo" >
		SELECT 
			<include refid="tmRepairOrderOutboundInfoColumns"/>
		FROM tm_repair_order_outbound_info a
		<include refid="tmRepairOrderOutboundInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO tm_repair_order_outbound_info(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			repair_no,
			line_no,
			fitting_code,
			barcode,
			operate_time,
			operator,
			supplier_code,
			price,
			org_id,
			rec_ver,
			base_org_id
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{repairNo},
			#{lineNo},
			#{fittingCode},
			#{barcode},
			#{operateTime},
			#{operator},
			#{supplierCode},
			#{price},
			#{orgId},
			#{recVer},
			#{baseOrgId}
		)
	</insert>
	
	<update id="update">
		UPDATE tm_repair_order_outbound_info SET
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
            repair_no = #{repairNo},
			line_no = #{lineNo},
			fitting_code = #{fittingCode},
			barcode = #{barcode},
			operate_time = #{operateTime},
			operator = #{operator},
			supplier_code = #{supplierCode},
			price = #{price},
			org_id = #{orgId},
			base_org_id = #{baseOrgId},
			rec_ver = rec_ver + 1
		WHERE id = #{id} AND rec_ver = #{recVer}
	</update>
	<!--物理删除-->
	<update id="delete">
        DELETE FROM tm_repair_order_outbound_info
        <where>
            <choose>
                <when test="id != null and id != ''">
                    id = #{id}
                </when>
                <otherwise>
                    repair_no = #{repairNo} AND org_id = #{orgId}
                </otherwise>
            </choose>
        </where>
	</update>
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE tm_repair_order_outbound_info SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="com.yunyou.modules.tms.order.entity.TmTransportOrderHeader" statementType="STATEMENT">
		select * FROM tm_repair_order_outbound_info  where ${propertyName} = '${value}'
	</select>
</mapper>