<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunyou.modules.wms.inventory.mapper.BanQinWmTfHeaderMapper">
    
	<sql id="banQinWmTfHeaderColumns">
		a.id AS "id",
		a.tf_no AS "tfNo",
		a.owner_code AS "ownerCode",
		a.status AS "status",
		a.audit_status AS "auditStatus",
		a.reason_code AS "reasonCode",
		a.reason AS "reason",
		a.audit_op AS "auditOp",
		a.audit_time AS "auditTime",
		a.audit_comment AS "auditComment",
		a.tf_op AS "tfOp",
		a.tf_time AS "tfTime",
		a.edi_send_time AS "ediSendTime",
		a.is_edi_send AS "isEdiSend",
		a.def1 AS "def1",
		a.def2 AS "def2",
		a.def3 AS "def3",
		a.def4 AS "def4",
		a.def5 AS "def5",
		a.remarks AS "remarks",
		a.rec_ver AS "recVer",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.org_id AS "orgId"
	</sql>
	
	<sql id="banQinWmTfHeaderJoins">
		LEFT JOIN sys_office so on a.org_id = so.id
        LEFT JOIN sys_user creater on creater.id = a.create_by
        LEFT JOIN sys_user updater on updater.id = a.update_by
	</sql>
    
	<select id="get" resultType="BanQinWmTfHeader" >
		SELECT 
			<include refid="banQinWmTfHeaderColumns"/>
		FROM wm_tf_header a
		<include refid="banQinWmTfHeaderJoins"/>
		WHERE a.id = #{id}
	</select>

    <select id="getEntity" resultType="BanQinWmTfHeaderEntity" >
        SELECT
            <include refid="banQinWmTfHeaderColumns"/>,
            ebc.ebcu_name_cn AS ownerName
        FROM wm_tf_header a
        LEFT JOIN eb_customer ebc ON a.owner_code = ebc.ebcu_customer_no AND a.org_id = ebc.org_id AND ebc.ebcu_type LIKE concat('%OWNER,%')
        WHERE a.id = #{id}
    </select>
	
	<select id="findList" resultType="BanQinWmTfHeader" >
		SELECT 
			<include refid="banQinWmTfHeaderColumns"/>
		FROM wm_tf_header a
		<include refid="banQinWmTfHeaderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			ADN a.org_id = #{orgId}
			${dataScope}
            <if test="tfNo != null and tfNo !=''">
                AND a.tf_no = #{tfNo}
            </if>
            <if test="ownerCode != null and ownerCode !=''">
                AND a.owner_code = #{ownerCode}
            </if>
            <if test="status != null and status !=''">
                AND a.status = #{status}
            </if>
            <if test="auditStatus != null and auditStatus !=''">
                AND a.audit_status = #{auditStatus}
            </if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

    <select id="findPage" resultType="BanQinWmTfHeaderEntity" >
        SELECT
            <include refid="banQinWmTfHeaderColumns"/>,
            ebc.ebcu_name_cn AS ownerName,
			creater.name AS "createBy.name",
			updater.name AS "updateBy.name",
			so.name AS orgName
        FROM wm_tf_header a
        LEFT JOIN eb_customer ebc ON a.owner_code = ebc.ebcu_customer_no AND a.org_id = ebc.org_id AND ebc.ebcu_type LIKE concat('%OWNER,%')
		<include refid="banQinWmTfHeaderJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            ${dataScope}
            <if test="tfNo != null and tfNo !=''">
                AND a.tf_no = #{tfNo}
            </if>
            <if test="ownerCode != null and ownerCode !=''">
                AND a.owner_code = #{ownerCode}
            </if>
            <if test="status != null and status !=''">
                AND a.status = #{status}
            </if>
            <if test="auditStatus != null and auditStatus !=''">
                AND a.audit_status = #{auditStatus}
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>
	
	<select id="findAllList" resultType="BanQinWmTfHeader" >
		SELECT 
			<include refid="banQinWmTfHeaderColumns"/>
		FROM wm_tf_header a
		<include refid="banQinWmTfHeaderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO wm_tf_header(
			id,
			tf_no,
			owner_code,
			status,
			audit_status,
			reason_code,
			reason,
			audit_op,
			audit_time,
			audit_comment,
			tf_op,
			tf_time,
			edi_send_time,
			is_edi_send,
			def1,
			def2,
			def3,
			def4,
			def5,
			remarks,
			rec_ver,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			org_id
		) VALUES (
			#{id},
			#{tfNo},
			#{ownerCode},
			#{status},
			#{auditStatus},
			#{reasonCode},
			#{reason},
			#{auditOp},
			#{auditTime},
			#{auditComment},
			#{tfOp},
			#{tfTime},
			#{ediSendTime},
			#{isEdiSend},
			#{def1},
			#{def2},
			#{def3},
			#{def4},
			#{def5},
			#{remarks},
			#{recVer},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{orgId}
		)
	</insert>
	
	<update id="update">
		UPDATE wm_tf_header SET 	
			tf_no = #{tfNo},
			owner_code = #{ownerCode},
			status = #{status},
			audit_status = #{auditStatus},
			reason_code = #{reasonCode},
			reason = #{reason},
			audit_op = #{auditOp},
			audit_time = #{auditTime},
			audit_comment = #{auditComment},
			tf_op = #{tfOp},
			tf_time = #{tfTime},
			edi_send_time = #{ediSendTime},
			is_edi_send = #{isEdiSend},
			def1 = #{def1},
			def2 = #{def2},
			def3 = #{def3},
			def4 = #{def4},
			def5 = #{def5},
			remarks = #{remarks},
			rec_ver = #{recVer} + 1,
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			org_id = #{orgId}
		WHERE id = #{id} AND rec_ver = #{recVer}
	</update>
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE wm_tf_header SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<!--物理删除-->
	<delete id="delete">
		DELETE FROM wm_tf_header WHERE id = #{id}
	</delete>
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BanQinWmTfHeader" statementType="STATEMENT">
		SELECT * FROM wm_tf_header WHERE ${propertyName} = '${value}'
	</select>
    <select id="getTfOrder" resultType="com.yunyou.modules.wms.inventory.entity.extend.PrintTfOrder">
		select wth.tf_no        as tfNo,
			   ecf.ebcu_name_cn as ownerName,
			   sdv.label        as reasonCode,
			   wth.reason       as reason,
			   suc.name         as createOp,
			   wth.create_date  as createTime,
			   wth.audit_op     as auditOp,
			   wth.audit_time   as auditTime,
			   wth.org_id       as orgId,
			   wtd.line_no      as lineNo,
			   wtd.fm_sku       as fmSkuCode,
			   cwsf.sku_name    as fmSkuName,
			   wtd.fm_lot       as fmLot,
			   wtd.fm_loc       as fmLoc,
			   wtd.fm_id        as fmId,
			   wtd.fm_qty_ea    as fmQtyEa,
			   ect.ebcu_name_cn as toOwnerName,
			   wtd.to_sku       as toSkuCode,
			   cwst.sku_name    as toSkuName,
			   wtd.to_lot       as toLot,
			   wtd.to_loc       as toLoc,
			   wtd.to_id        as toId,
			   wtd.to_qty_ea    as toQtyEa
		from wm_tf_header wth
			inner join wm_tf_detail wtd on wth.tf_no = wtd.tf_no and wth.org_id = wtd.org_id
			left join eb_customer ecf on wth.owner_code = ecf.ebcu_customer_no and wth.org_id = ecf.org_id
			left join cd_wh_sku cwsf on wth.owner_code = cwsf.owner_code and wtd.fm_sku = cwsf.sku_code and wth.org_id = cwsf.org_id
			left join eb_customer ect on wtd.to_owner = ect.ebcu_customer_no and wth.org_id = ect.org_id
			left join cd_wh_sku cwst on wtd.to_owner = cwst.owner_code and wtd.to_sku = cwst.sku_code and wth.org_id = cwst.org_id
			left join sys_dict_type sdt on sdt.type = 'SYS_WM_TF_REASON'
			left join sys_dict_value sdv on sdt.id = sdv.dict_type_id and wth.reason_code = sdv.value
			left join sys_user suc on suc.id = wth.create_by
		where wth.id in
		<foreach collection="ids" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		order by wth.tf_no, wtd.line_no
	</select>

</mapper>