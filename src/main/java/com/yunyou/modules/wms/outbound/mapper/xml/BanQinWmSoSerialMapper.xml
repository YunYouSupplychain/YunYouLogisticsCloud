<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunyou.modules.wms.outbound.mapper.BanQinWmSoSerialMapper">
    
	<sql id="banQinWmSoSerialColumns">
		a.id AS "id",
		a.so_no AS "soNo",
		a.sku_code AS "skuCode",
		a.serial_no AS "serialNo",
		a.line_no AS "lineNo",
		a.alloc_id AS "allocId",
		a.owner_code AS "ownerCode",
		a.lot_num AS "lotNum",
		a.rec_ver AS "recVer",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.org_id AS "orgId"
	</sql>
	
	<sql id="banQinWmSoSerialJoins">
		
	</sql>
	
	<select id="get" resultType="BanQinWmSoSerial" >
		SELECT 
			<include refid="banQinWmSoSerialColumns"/>
		FROM wm_so_serial a
		<include refid="banQinWmSoSerialJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BanQinWmSoSerial" >
		SELECT 
			<include refid="banQinWmSoSerialColumns"/>
		FROM wm_so_serial a
		<include refid="banQinWmSoSerialJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			AND a.org_id = #{orgId}
			<if test="soNo != null and soNo != ''">
				AND a.so_no = #{soNo}
			</if>
			<if test="skuCode != null and skuCode != ''">
				AND a.sku_code = #{skuCode}
			</if>
			<if test="lineNo != null and lineNo != ''">
				AND a.line_no = #{lineNo}
			</if>
			<if test="allocId != null and allocId != ''">
				AND a.alloc_id = #{allocId}
			</if>
			<if test="ownerCode != null and ownerCode != ''">
				AND a.owner_code = #{ownerCode}
			</if>
			<if test="lotNum != null and lotNum != ''">
				AND a.lot_num = #{lotNum}
			</if>
			<if test="serialNo != null and serialNo != ''">
				AND a.serial_no = #{serialNo}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findPage" resultType="BanQinWmSoSerialEntity" >
		SELECT
			<include refid="banQinWmSoSerialColumns"/>,
			ebcu.ebcu_name_cn AS ownerName,
		    cws.sku_name AS skuName
		FROM wm_so_serial a
		LEFT JOIN eb_customer ebcu ON a.owner_code = ebcu.ebcu_customer_no AND a.org_id = ebcu.org_id AND ebcu.ebcu_type like concat('%OWNER,%')
		LEFT JOIn cd_wh_sku cws ON a.owner_code = cws.owner_code AND a.sku_code = cws.sku_code AND a.org_id = cws.org_id
		<include refid="banQinWmSoSerialJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.org_id = #{orgId}
			<if test="soNo != null and soNo != ''">
				AND a.so_no = #{soNo}
			</if>
			<if test="skuCode != null and skuCode != ''">
				AND a.sku_code = #{skuCode}
			</if>
			<if test="lineNo != null and lineNo != ''">
				AND a.line_no = #{lineNo}
			</if>
			<if test="allocId != null and allocId != ''">
				AND a.alloc_id = #{allocId}
			</if>
			<if test="ownerCode != null and ownerCode != ''">
				AND a.owner_code = #{ownerCode}
			</if>
			<if test="lotNum != null and lotNum != ''">
				AND a.lot_num = #{lotNum}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

    <select id="findByAllocIds" resultType="BanQinWmSoSerialEntity" >
        SELECT
        <include refid="banQinWmSoSerialColumns"/>,
        ebcu.ebcu_name_cn AS ownerName,
        cws.sku_name AS skuName
        FROM wm_so_serial a
        LEFT JOIN eb_customer ebcu ON a.owner_code = ebcu.ebcu_customer_no AND a.org_id = ebcu.org_id AND ebcu.ebcu_type like concat('%OWNER,%')
        LEFT JOIn cd_wh_sku cws ON a.owner_code = cws.owner_code AND a.sku_code = cws.sku_code AND a.org_id = cws.org_id
        <where>
            ANd a.org_id = #{orgId}
            AND a.alloc_id IN
            <foreach collection="allocIds" item="allocId" index="allocId" open="(" separator="," close=")">
                #{allocId}
            </foreach>
        </where>
    </select>
    
	<select id="findAllList" resultType="BanQinWmSoSerial" >
		SELECT 
			<include refid="banQinWmSoSerialColumns"/>
		FROM wm_so_serial a
		<include refid="banQinWmSoSerialJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO wm_so_serial(
			id,
			so_no,
			sku_code,
			serial_no,
			line_no,
			alloc_id,
			owner_code,
			lot_num,
			rec_ver,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			org_id
		) VALUES (
			#{id},
			#{soNo},
			#{skuCode},
			#{serialNo},
			#{lineNo},
			#{allocId},
			#{ownerCode},
			#{lotNum},
			#{recVer},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{orgId}
		)
	</insert>
	
	<update id="update">
		UPDATE wm_so_serial SET 	
			so_no = #{soNo},
			sku_code = #{skuCode},
			serial_no = #{serialNo},
			line_no = #{lineNo},
			alloc_id = #{allocId},
			owner_code = #{ownerCode},
			lot_num = #{lotNum},
			rec_ver = #{recVer} + 1,
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			org_id = #{orgId}
		WHERE id = #{id} AND rec_ver = #{recVer}
	</update>
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM wm_so_serial
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE wm_so_serial SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BanQinWmSoSerial" statementType="STATEMENT">
		SELECT * FROM wm_so_serial WHERE ${propertyName} = '${value}'
	</select>

    <!--***********************************DELETE***********************************-->
    <delete id="removeByAllocId">
        DELETE wss FROM wm_so_serial wss
        <where>
            1 = 1
            AND EXISTS (SELECT 1 FROM wm_so_alloc wsa WHERE wss.alloc_id = wsa.alloc_id AND wss.org_id = wsa.org_id)
            AND wss.alloc_id = #{allocId}
            AND wss.org_id = #{orgId}
        </where>
    </delete>

    <delete id="removeByAllocIdAndNotPack">
        DELETE wss FROM wm_so_serial wss
        <where>
            1 = 1
            AND EXISTS (SELECT 1 FROM wm_so_alloc wsa where wss.alloc_id = wsa.alloc_id and wss.org_id = wsa.org_id and (wsa.pack_op is null or wsa.pack_op = ''))
            AND wss.alloc_id = #{allocId}
            AND wss.org_id = #{orgId}
        </where>
    </delete>
</mapper>