<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunyou.modules.wms.outbound.mapper.BanQinWmUpdateConsigneeInfoLogMapper">
    
	<sql id="banQinWmUpdateConsigneeInfoLogColumns">
		a.id AS "id",
		a.so_no AS "soNo",
		a.customer_no AS "customerNo",
		a.extend_no AS "extendNo",
		a.consignee_name AS "consigneeName",
		a.consignee_tel AS "consigneeTel",
		a.consignee_addr AS "consigneeAddr",
		a.consignee_area AS "consigneeArea",
		a.def1 AS "def1",
		a.def2 AS "def2",
		a.def3 AS "def3",
		a.def4 AS "def4",
		a.def5 AS "def5",
		a.remarks AS "remarks",
		a.rec_ver AS "recVer",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.org_id AS "orgId"
	</sql>
	
	<select id="findList" resultType="BanQinWmUpdateConsigneeInfoLog">
		SELECT
			<include refid="banQinWmUpdateConsigneeInfoLogColumns"/>
		FROM wm_update_consignee_info_log a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findPage" resultType="BanQinWmUpdateConsigneeInfoLogEntity" >
		SELECT
			<include refid="banQinWmUpdateConsigneeInfoLogColumns"/>,
		    u.name AS "createBy.name"
		FROM wm_update_consignee_info_log a
		LEFT JOIN sys_user u ON a.create_by = u.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.org_id = #{orgId}
			<if test="soNo != null and soNo !=''">
				AND a.so_no LIKE CONCAT(#{soNo}, '%')
			</if>
			<if test="customerNo != null and customerNo !=''">
				AND a.customer_no LIKE CONCAT(#{customerNo}, '%')
			</if>
			<if test="extendNo != null and extendNo !=''">
				AND a.extend_no LIKE CONCAT(#{extendNo}, '%')
			</if>
			<if test="createDateFm != null and createDateFm !=''">
				<![CDATA[ AND a.create_date >= #{createDateFm} ]]>
			</if>
			<if test="createDateTo != null and createDateTo !=''">
				<![CDATA[ AND a.create_date <= #{createDateTo} ]]>
			</if>
			<if test="trackingNo != null and trackingNo != ''">
				AND EXISTS(
		    		SELECT 1 FROM wm_so_alloc s WHERE a.so_no = s.so_no AND a.org_id = s.org_id AND s.tracking_no = #{trackingNo} AND s.org_id = #{orgId}
				)
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="BanQinWmUpdateConsigneeInfoLog" >
		SELECT
			<include refid="banQinWmUpdateConsigneeInfoLogColumns"/>
		FROM wm_update_consignee_info_log a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO wm_update_consignee_info_log(
			id,
			so_no,
			customer_no,
			extend_no,
			consignee_name,
			consignee_tel,
			consignee_addr,
			consignee_area,
			def1,
			def2,
			def3,
			def4,
			def5,
			remarks,
			rec_ver,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			org_id
		) VALUES (
			#{id},
			#{soNo},
			#{customerNo},
			#{extendNo},
			#{consigneeName},
			#{consigneeTel},
			#{consigneeAddr},
			#{consigneeArea},
			#{def1},
			#{def2},
			#{def3},
			#{def4},
			#{def5},
			#{remarks},
			#{recVer},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{orgId}
		)
	</insert>
	
	<update id="update">
		UPDATE wm_update_consignee_info_log SET
			so_no = #{soNo},
			customer_no = #{customerNo},
			extend_no = #{extendNo},
			consignee_name = #{consigneeName},
			consignee_tel = #{consigneeTel},
			consignee_addr = #{consigneeAddr},
			consignee_area = #{consigneeArea},
			def1 = #{def1},
			def2 = #{def2},
			def3 = #{def3},
			def4 = #{def4},
			def5 = #{def5},
			remarks = #{remarks},
			rec_ver = #{recVer} + 1,
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			org_id = #{orgId}
		WHERE id = #{id} AND rec_ver = #{recVer}
	</update>

	<!--物理删除-->
	<update id="delete">
		DELETE FROM wm_update_consignee_info_log
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE wm_update_consignee_info_log SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BanQinWmUpdateConsigneeInfoLog" statementType="STATEMENT">
		SELECT * FROM wm_update_consignee_info_log WHERE ${propertyName} = '${value}'
	</select>
	
</mapper>