<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunyou.modules.bms.business.mapper.BmsOutboundDataMapper">

    <sql id="bmsOutboundDataColumns">
        a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.order_no AS "orderNo",
		a.order_type AS "orderType",
		a.order_date AS "orderDate",
		a.owner_code AS "ownerCode",
		a.owner_name AS "ownerName",
		a.customer_code AS "customerCode",
		a.customer_name AS "customerName",
		a.supplier_code AS "supplierCode",
		a.supplier_name AS "supplierName",
		a.sku_code AS "skuCode",
		a.sku_name AS "skuName",
        a.sku_class AS "skuClass",
		a.lot_no AS "lotNo",
		a.lot_att01 AS "lotAtt01",
		a.lot_att02 AS "lotAtt02",
		a.lot_att03 AS "lotAtt03",
		a.lot_att04 AS "lotAtt04",
		a.lot_att05 AS "lotAtt05",
		a.lot_att06 AS "lotAtt06",
		a.lot_att07 AS "lotAtt07",
		a.lot_att08 AS "lotAtt08",
		a.lot_att09 AS "lotAtt09",
		a.lot_att10 AS "lotAtt10",
		a.lot_att11 AS "lotAtt11",
		a.lot_att12 AS "lotAtt12",
		a.order_qty AS "orderQty",
		a.order_qty_cs AS "orderQtyCs",
		a.order_qty_pl AS "orderQtyPl",
		a.ship_qty AS "shipQty",
		a.ship_qty_cs AS "shipQtyCs",
		a.ship_qty_pl AS "shipQtyPl",
        a.weight AS "weight",
        a.volume AS "volume",
		a.ship_time AS "shipTime",
		a.org_id AS "orgId",
		a.data_sources AS "dataSources",
		a.is_fee AS "isFee",
		a.order_no_a AS "orderNoA",
		a.order_no_b AS "orderNoB",
		a.order_no_c AS "orderNoC",
		a.business_type AS "businessType",
		a.business_model AS "businessModel",
		a.project_code AS "projectCode",
		a.project_name AS "projectName"
    </sql>

    <sql id="extraColumns">
        bsc.name AS "skuClassName",
        so.name AS "orgName"
    </sql>

    <sql id="bmsOutboundDataJoins">
        LEFT JOIN bms_sku_classification bsc ON a.sku_class = bsc.code AND a.org_id = bsc.id
        LEFT JOIN sys_office so ON a.org_id = so.id
    </sql>

    <select id="get" resultType="com.yunyou.modules.bms.business.entity.BmsOutboundData">
        SELECT
        <include refid="bmsOutboundDataColumns"/>
        FROM bms_outbound_data a
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="com.yunyou.modules.bms.business.entity.BmsOutboundData">
        SELECT
        <include refid="bmsOutboundDataColumns"/>
        FROM bms_outbound_data a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            AND a.org_id = #{orgId}
            ${dataScope}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="com.yunyou.modules.bms.business.entity.BmsOutboundData">
        SELECT
        <include refid="bmsOutboundDataColumns"/>
        FROM bms_outbound_data a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            ${dataScope}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO bms_outbound_data
        (
            id,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag,
            order_no,
            order_type,
            order_date,
            owner_code,
            owner_name,
            customer_code,
            customer_name,
            supplier_code,
            supplier_name,
            sku_code,
            sku_name,
            sku_class,
            lot_no,
            lot_att01,
            lot_att02,
            lot_att03,
            lot_att04,
            lot_att05,
            lot_att06,
            lot_att07,
            lot_att08,
            lot_att09,
            lot_att10,
            lot_att11,
            lot_att12,
            order_qty,
            order_qty_cs,
            order_qty_pl,
            ship_qty,
            ship_qty_cs,
            ship_qty_pl,
            weight,
            volume,
            ship_time,
            org_id,
            data_sources,
            is_fee,
            order_no_a,
            order_no_b,
            order_no_c,
            business_type,
            business_model,
            project_code,
            project_name
        )
        VALUES
        (
            #{id},
            #{createBy.id},
            #{createDate},
            #{updateBy.id},
            #{updateDate},
            #{remarks},
            #{delFlag},
            #{orderNo},
            #{orderType},
            #{orderDate},
            #{ownerCode},
            #{ownerName},
            #{customerCode},
            #{customerName},
            #{supplierCode},
            #{supplierName},
            #{skuCode},
            #{skuName},
            #{skuClass},
            #{lotNo},
            #{lotAtt01},
            #{lotAtt02},
            #{lotAtt03},
            #{lotAtt04},
            #{lotAtt05},
            #{lotAtt06},
            #{lotAtt07},
            #{lotAtt08},
            #{lotAtt09},
            #{lotAtt10},
            #{lotAtt11},
            #{lotAtt12},
            #{orderQty},
            #{orderQtyCs},
            #{orderQtyPl},
            #{shipQty},
            #{shipQtyCs},
            #{shipQtyPl},
            #{weight},
            #{volume},
            #{shipTime},
            #{orgId},
            #{dataSources},
            #{isFee},
            #{orderNoA},
            #{orderNoB},
            #{orderNoC},
            #{businessType},
            #{businessModel},
            #{projectCode},
            #{projectName}
        )
    </insert>

    <insert id="batchInsert">
        INSERT INTO bms_outbound_data
        (
        id,
        create_by,
        create_date,
        update_by,
        update_date,
        remarks,
        del_flag,
        order_no,
        order_type,
        order_date,
        owner_code,
        owner_name,
        customer_code,
        customer_name,
        supplier_code,
        supplier_name,
        sku_code,
        sku_name,
        sku_class,
        lot_no,
        lot_att01,
        lot_att02,
        lot_att03,
        lot_att04,
        lot_att05,
        lot_att06,
        lot_att07,
        lot_att08,
        lot_att09,
        lot_att10,
        lot_att11,
        lot_att12,
        order_qty,
        order_qty_cs,
        order_qty_pl,
        ship_qty,
        ship_qty_cs,
        ship_qty_pl,
        weight,
        volume,
        ship_time,
        org_id,
        data_sources,
        is_fee,
        order_no_a,
        order_no_b,
        order_no_c,
        business_type,
        business_model,
        project_code,
        project_name
        ) VALUES
        <foreach collection="items" item="item" separator=",">
            (
            #{item.id},
            #{item.createBy.id},
            #{item.createDate},
            #{item.updateBy.id},
            #{item.updateDate},
            #{item.remarks},
            #{item.delFlag},
            #{item.orderNo},
            #{item.orderType},
            #{item.orderDate},
            #{item.ownerCode},
            #{item.ownerName},
            #{item.customerCode},
            #{item.customerName},
            #{item.supplierCode},
            #{item.supplierName},
            #{item.skuCode},
            #{item.skuName},
            #{item.skuClass},
            #{item.lotNo},
            #{item.lotAtt01},
            #{item.lotAtt02},
            #{item.lotAtt03},
            #{item.lotAtt04},
            #{item.lotAtt05},
            #{item.lotAtt06},
            #{item.lotAtt07},
            #{item.lotAtt08},
            #{item.lotAtt09},
            #{item.lotAtt10},
            #{item.lotAtt11},
            #{item.lotAtt12},
            #{item.orderQty},
            #{item.orderQtyCs},
            #{item.orderQtyPl},
            #{item.shipQty},
            #{item.shipQtyCs},
            #{item.shipQtyPl},
            #{item.weight},
            #{item.volume},
            #{item.shipTime},
            #{item.orgId},
            #{item.dataSources},
            #{item.isFee},
            #{item.orderNoA},
            #{item.orderNoB},
            #{item.orderNoC},
            #{item.businessType},
            #{item.businessModel},
            #{item.projectCode},
            #{item.projectName}
            )
        </foreach>
    </insert>

    <update id="update">
        UPDATE bms_outbound_data
        SET update_by      = #{updateBy.id},
            update_date    = #{updateDate},
            remarks        = #{remarks},
            del_flag       = #{delFlag},
            order_no       = #{orderNo},
            order_type     = #{orderType},
            order_date     = #{orderDate},
            owner_code     = #{ownerCode},
            owner_name     = #{ownerName},
            customer_code  = #{customerCode},
            customer_name  = #{customerName},
            supplier_code  = #{supplierCode},
            supplier_name  = #{supplierName},
            sku_code       = #{skuCode},
            sku_name       = #{skuName},
            sku_class      = #{skuClass},
            lot_no         = #{lotNo},
            lot_att01      = #{lotAtt01},
            lot_att02      = #{lotAtt02},
            lot_att03      = #{lotAtt03},
            lot_att04      = #{lotAtt04},
            lot_att05      = #{lotAtt05},
            lot_att06      = #{lotAtt06},
            lot_att07      = #{lotAtt07},
            lot_att08      = #{lotAtt08},
            lot_att09      = #{lotAtt09},
            lot_att10      = #{lotAtt10},
            lot_att11      = #{lotAtt11},
            lot_att12      = #{lotAtt12},
            order_qty      = #{orderQty},
            order_qty_cs   = #{orderQtyCs},
            order_qty_pl   = #{orderQtyPl},
            ship_qty       = #{shipQty},
            ship_qty_cs    = #{shipQtyCs},
            ship_qty_pl    = #{shipQtyPl},
            weight         = #{weight},
            volume         = #{volume},
            ship_time      = #{shipTime},
            org_id         = #{orgId},
            data_sources   = #{dataSources},
            is_fee         = #{isFee},
            order_no_a     = #{orderNoA},
            order_no_b     = #{orderNoB},
            order_no_c     = #{orderNoC},
            business_type  = #{businessType},
            business_model = #{businessModel},
            project_code   = #{projectCode},
            project_name   = #{projectName}
        WHERE id = #{id}
    </update>
    <!--逻辑删除-->
    <update id="deleteByLogic">
        UPDATE bms_outbound_data
        SET del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>
    <!--物理删除-->
    <delete id="delete">
        DELETE FROM bms_outbound_data WHERE id = #{id}
    </delete>

    <delete id="deleteByCondition">
        DELETE FROM bms_outbound_data WHERE
        <![CDATA[ship_time >= #{fmDate}]]>
        <![CDATA[AND ship_time <= #{toDate}]]>
        <if test="dataSources != null and dataSources != ''">
            AND data_sources = #{dataSources}
        </if>
        <if test="orgId != null and orgId != ''">
            AND org_id = #{orgId}
        </if>
    </delete>
    <!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
    <select id="findUniqueByProperty" resultType="com.yunyou.modules.bms.business.entity.BmsOutboundData" statementType="STATEMENT">
        select * FROM bms_outbound_data where ${propertyName} = '${value}'
    </select>

    <select id="findPage" resultType="com.yunyou.modules.bms.business.entity.extend.BmsOutboundDataEntity">
        SELECT
        <include refid="bmsOutboundDataColumns"/>,
        <include refid="extraColumns"/>
        FROM bms_outbound_data a
        <include refid="bmsOutboundDataJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            ${dataScope}
            <if test="orderDateFm != null">
                AND a.order_date &gt;= #{orderDateFm}
            </if>
            <if test="orderDateTo != null">
                AND a.order_date &lt;= #{orderDateTo}
            </if>
            <if test="shipTimeFm != null">
                AND a.ship_time &gt;= #{shipTimeFm}
            </if>
            <if test="shipTimeTo != null">
                AND a.ship_time &lt;= #{shipTimeTo}
            </if>
            <if test="orderNo != null and orderNo != ''">
                AND a.order_no LIKE concat('%', #{orderNo}, '%')
            </if>
            <if test="orderNoA != null and orderNoA != ''">
                AND a.order_no_a LIKE concat('%', #{orderNoA}, '%')
            </if>
            <if test="orderNoB != null and orderNoB != ''">
                AND a.order_no_b LIKE concat('%', #{orderNoB}, '%')
            </if>
            <if test="orderNoC != null and orderNoC != ''">
                AND a.order_no_c LIKE concat('%', #{orderNoC}, '%')
            </if>
            <if test="orderType != null and orderType != ''">
                AND a.order_type = #{orderType}
            </if>
            <if test="businessType != null and businessType != ''">
                AND a.business_type = #{businessType}
            </if>
            <if test="customerCode != null and customerCode != ''">
                AND a.customer_code LIKE concat('%', #{customerCode}, '%')
            </if>
            <if test="customerName != null and customerName != ''">
                AND a.customer_name LIKE concat('%', #{customerName}, '%')
            </if>
            <if test="supplierCode != null and supplierCode != ''">
                AND a.supplier_code LIKE concat('%', #{supplierCode}, '%')
            </if>
            <if test="supplierName != null and supplierName != ''">
                AND a.supplier_name LIKE concat('%', #{supplierName}, '%')
            </if>
            <if test="ownerCode != null and ownerCode != ''">
                AND a.owner_code LIKE concat('%', #{ownerCode}, '%')
            </if>
            <if test="ownerName != null and ownerName != ''">
                AND a.owner_name LIKE concat('%', #{ownerName}, '%')
            </if>
            <if test="skuCode != null and skuCode != ''">
                AND a.sku_code LIKE concat('%', #{skuCode}, '%')
            </if>
            <if test="skuName != null and skuName != ''">
                AND a.sku_name LIKE concat('%', #{skuName}, '%')
            </if>
            <if test="skuClass != null and skuClass != ''">
                AND a.sku_class = #{skuClass}
            </if>
            <if test="businessModel != null and businessModel != ''">
                AND a.business_model = #{businessModel}
            </if>
            <if test="isFee != null and isFee != ''">
                AND a.is_fee = #{isFee}
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.order_date DESC
            </otherwise>
        </choose>
    </select>
    <select id="findCalcData" resultType="com.yunyou.modules.bms.business.entity.BmsOutboundData">
        select * from bms_outbound_data <where>${sql}</where>
    </select>
</mapper>