<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunyou.modules.bms.basic.mapper.BmsTransportPriceMapper">

    <sql id="bmsTransportPriceColumns">
        a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.rec_ver AS "recVer",
		a.fk_id AS "fkId",
		a.start_place_code AS "startPlaceCode",
		a.end_place_code AS "endPlaceCode",
		a.region_code AS "regionCode",
		a.car_type_code AS "carTypeCode",
		a.price AS "price",
		a.logistics_points AS "logisticsPoints",
		a.unit AS "unit",
		a.is_use_step AS "isUseStep",
		a.is_accumulation_method AS "isAccumulationMethod",
		a.org_id AS "orgId"
    </sql>

    <sql id="extraColumns">
        sas.name AS "startPlaceName",
        sae.name AS "endPlaceName",
        scr.name AS "regionName",
        sdv.label AS "carType",
        so.name AS "orgName"
    </sql>

    <sql id="bmsTransportPriceJoins">
        LEFT JOIN sys_area sas ON a.start_place_code = sas.code
        LEFT JOIN sys_area sae ON a.end_place_code = sae.code
        LEFT JOIN sys_data_set_org_relation sdsor ON a.org_id = sdsor.org_id
        LEFT JOIN sys_common_region scr ON a.region_code = scr.code AND sdsor.data_set = scr.data_set
        LEFT JOIN sys_dict_type sdt ON sdt.type = 'TMS_CAR_TYPE'
        LEFT JOIN sys_dict_value sdv ON sdt.id = sdv.dict_type_id AND a.car_type_code = sdv.value
        LEFT JOIN sys_office so ON a.org_id = so.id
    </sql>

    <select id="get" resultType="com.yunyou.modules.bms.basic.entity.BmsTransportPrice">
        SELECT
        <include refid="bmsTransportPriceColumns"/>
        FROM bms_transport_price a
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="com.yunyou.modules.bms.basic.entity.BmsTransportPrice">
        SELECT
        <include refid="bmsTransportPriceColumns"/>
        FROM bms_transport_price a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            AND a.org_id = #{orgId}
            ${dataScope}
            <if test="startPlaceCode != null and startPlaceCode != ''">
                AND a.start_place_code = #{startPlaceCode}
            </if>
            <if test="endPlaceCode != null and endPlaceCode != ''">
                AND a.end_place_code = #{endPlaceCode}
            </if>
            <if test="regionCode != null and regionCode != ''">
                AND a.region_code = #{regionCode}
            </if>
            <if test="carTypeCode != null and carTypeCode != ''">
                AND a.car_type_code = #{carTypeCode}
            </if>
            <if test="isUseStep != null and isUseStep !=''">
                AND a.is_use_step = #{isUseStep}
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="com.yunyou.modules.bms.basic.entity.BmsTransportPrice">
        SELECT
        <include refid="bmsTransportPriceColumns"/>
        FROM bms_transport_price a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            ${dataScope}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO bms_transport_price
        (
            id,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag,
            rec_ver,
            fk_id,
            start_place_code,
            end_place_code,
            region_code,
            car_type_code,
            price,
            logistics_points,
            unit,
            is_use_step,
            is_accumulation_method,
            org_id
        )
        VALUES
        (
            #{id},
            #{createBy.id},
            #{createDate},
            #{updateBy.id},
            #{updateDate},
            #{remarks},
            #{delFlag},
            #{recVer},
            #{fkId},
            #{startPlaceCode},
            #{endPlaceCode},
            #{regionCode},
            #{carTypeCode},
            #{price},
            #{logisticsPoints},
            #{unit},
            #{isUseStep},
            #{isAccumulationMethod},
            #{orgId}
        )
    </insert>

    <update id="update">
        UPDATE bms_transport_price
        SET update_by              = #{updateBy.id},
            update_date            = #{updateDate},
            remarks                = #{remarks},
            rec_ver                = rec_ver + 1,
            fk_id                  = #{fkId},
            start_place_code       = #{startPlaceCode},
            end_place_code         = #{endPlaceCode},
            region_code            = #{regionCode},
            car_type_code          = #{carTypeCode},
            price                  = #{price},
            logistics_points       = #{logisticsPoints},
            unit                   = #{unit},
            is_use_step            = #{isUseStep},
            is_accumulation_method = #{isAccumulationMethod},
            org_id                 = #{orgId}
        WHERE id = #{id}
          AND rec_ver = #{recVer}
    </update>
    <!--逻辑删除-->
    <update id="deleteByLogic">
        UPDATE bms_transport_price
        SET del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>
    <!--物理删除-->
    <delete id="delete">
        DELETE FROM bms_transport_price WHERE id = #{id}
    </delete>
    <!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
    <select id="findUniqueByProperty" resultType="com.yunyou.modules.bms.basic.entity.BmsTransportPrice" statementType="STATEMENT">
        select * FROM bms_transport_price where ${propertyName} = '${value}'
    </select>

    <select id="getEntity" resultType="com.yunyou.modules.bms.basic.entity.extend.BmsTransportPriceEntity">
        SELECT
        <include refid="bmsTransportPriceColumns"/>,
        <include refid="extraColumns"/>
        FROM bms_transport_price a
        <include refid="bmsTransportPriceJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findByFkId" resultType="com.yunyou.modules.bms.basic.entity.extend.BmsTransportPriceEntity">
        SELECT
        <include refid="bmsTransportPriceColumns"/>,
        <include refid="extraColumns"/>
        FROM bms_transport_price a
        <include refid="bmsTransportPriceJoins"/>
        WHERE a.fk_id = #{fkId}
    </select>

    <select id="findByTransportCode" resultType="com.yunyou.modules.bms.basic.entity.extend.BmsTransportPriceEntity">
        SELECT
        <include refid="bmsTransportPriceColumns"/>,
        <include refid="extraColumns"/>
        FROM bms_transport_price a
        LEFT JOIN bms_transport_group btg ON btg.id = a.fk_id
        <include refid="bmsTransportPriceJoins"/>
        <where>
            btg.transport_group_code = #{transportGroupCode}
            AND btg.org_id = #{orgId}
            ${dataScope}
            <if test="startPlaceCode != null and startPlaceCode != ''">
                AND (a.start_place_code like concat('%', #{startPlaceCode}, '%') or sas.name like concat('%', #{startPlaceCode}, '%'))
            </if>
            <if test="endPlaceCode != null and endPlaceCode != ''">
                AND (a.end_place_code like concat('%', #{endPlaceCode}, '%') or sae.name like concat('%', #{endPlaceCode}, '%'))
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.car_type_code, a.start_place_code, a.end_place_code
            </otherwise>
        </choose>
    </select>

    <select id="getContractPrice" resultType="com.yunyou.modules.bms.basic.entity.extend.BmsContractPrice">
        SELECT a.id                     AS "id",
               a.price                  AS "price",
               a.logistics_points       AS "logisticsPoints",
               a.is_use_step            AS "isUseStep",
               a.is_accumulation_method AS "isAccumulationMethod"
        FROM bms_transport_price a
             INNER JOIN bms_transport_group btg ON a.fk_id = btg.id
             INNER JOIN bms_contract_cost_item bcci ON btg.transport_group_code = bcci.transport_group_code AND btg.org_id = bcci.org_id
        WHERE bcci.id = #{contractDetailId}
          AND bcci.org_id = #{orgId}
        <choose>
            <when test="startPlaceCode != null and startPlaceCode != ''">
                AND a.start_place_code = #{startPlaceCode}
            </when>
            <otherwise>
                AND (a.start_place_code = '' or a.start_place_code is null)
            </otherwise>
        </choose>
        <choose>
            <when test="endPlaceCode != null and endPlaceCode != ''">
                AND a.end_place_code = #{endPlaceCode}
            </when>
            <otherwise>
                AND (a.end_place_code = '' or a.end_place_code is null)
            </otherwise>
        </choose>
        <choose>
            <when test="regionCode != null and regionCode != ''">
                AND a.region_code = #{regionCode}
            </when>
            <otherwise>
                AND (a.region_code = '' or a.region_code is null)
            </otherwise>
        </choose>
        <choose>
            <when test="carTypeCode != null and carTypeCode != ''">
                AND a.car_type_code = #{carTypeCode}
            </when>
            <otherwise>
                AND (a.car_type_code = '' or a.car_type_code is null)
            </otherwise>
        </choose>
        LIMIT 1
    </select>

</mapper>